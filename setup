#!/bin/bash
## i have used `tput civis`  for hide cursor and for normal state `tupt cnorm`
## Note: for "tput" function first you should install **ncurses-utils** package.. then you can use the code..

spin () {

local pid=$!
local delay=0.25
local spinner=( '█■■■■' '■█■■■' '■■█■■' '■■■█■' '■■■■█' )

while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do

for i in "${spinner[@]}"
do
	tput civis
	echo -ne "\033[34m\r[*] Downloading..please wait.........\e[33m[\033[32m$i\033[33m]\033[0m   ";
	sleep $delay
	printf "\b\b\b\b\b\b\b\b";
done
done
printf "   \b\b\b\b\b"
tput cnorm
printf "\e[1;33m [Done]\e[0m";
echo "";

}

clear;
echo "";
sleep 1
echo -e "\e[1;34m[*] \e[32minstall packages....\e[0m";
echo "";
(apt update && apt upgrade -y) &> /dev/null;
(apt install figlet pv ncurses-utils binutils coreutils wget git apksigner termux-api tar -y) &> /dev/null;
termux-wake-lock;
if [ -e $PREFIX/share/figlet/Remo773.flf ]; then
	echo -e "\e[1;34m[*] \033[32mRemo773.flf figlet font is present\033[0m";
	sleep 2
else
wget https://raw.githubusercontent.com/remo7777/REMO773/master/Remo773.flf &> /dev/null;
sleep 2
cat Remo773.flf >> $PREFIX/share/figlet/Remo773.flf
sleep 2
rm Remo773.flf
fi
clear;
echo "";
echo -e "\033[33m$(figlet -f Remo773 "Apktool")\e[0m"
echo -e "\e[1;32m
+--------------------------------------*/
Remo773 : (\e[33m26.5.2019\e[32m)
1. Openjdk-8-jre (\e[33mBy \e[34mHax\e[31m4\e[34mus\e[32m)
2. Apktool (\e[33mSetup By Remo773\e[32m)

+--------------------------------------*/
\033[0m";
tput setaf 3;
read -p  "Do you want to setup this ? (y/n) " PROC33

tput sgr 0
if [ "$PROC33" = "y" ]; then

echo -e "\e[1;34m[*] \e[32mDownloding Hax4us openjdk-8 script..\e[0m";
(wget https://raw.githubusercontent.com/Hax4us/java/master/installjava) &> /dev/null & spin;
(patch -N installjava apktool/.apktool/java.patch) &> /dev/null;
bash installjava;
echo

if [ -e ~/.bashrc ]; then
	(patch -N $PREFIX/etc/bash.bashrc apktool/.apktool/bash.patch) &> /dev/null
elif [ -e ~/.zshrc ]; then
	echo "export _JAVA_OPTIONS='-Duser.home=/data/data/com.termux/files/home -Djava.io.tmpdir=/data/data/com.termux/files/usr/tmp'" >> ~/.zshrc;
else
	echo -e "\e[1;34m[*] \e[32mUse bash shell for java..\e[0m";
	chsh -s bash
	(patch -N $PREFIX/etc/bash.bashrc apktool/.apktool/bash.patch) &> /dev/null;
fi
sleep 2
echo -e "\e[1;34m[*] \e[32mInstalling Apktool...\e[0m";
if [ -d "$HOME/metasploit-framework" ]; then
	echo -e "\e[1;34m[*] \e[32mYour metasploit-framework is present on Home directory....\e[0m";
	rm -rf $PREFIX/bin/apktool;
	cp apktool/apktool.jar $PREFIX/bin/
	cp apktool/.apktool/aapt apktool/.apktool/zipalign apktool/.apktool/apktool $PREFIX/bin/
	chmod 700 $PREFIX/bin/apktool $PREFIX/bin/aapt $PREFIX/bin/zipalign
	rm ~/metasploit-framework/lib/msf/core/payload/apk.rb
	cp apk.rb ~/metasploit-framework/lib/msf/core/payload/
	(patch -N ~/metasploit-framework/lib/msf/core/payload/apk.rb apktool/.apktool/apk.rb.patch) &> /dev/null
	cp apktool/.apktool/framework-res.apk $PREFIX/share/
	echo -e "\e[1;34m[*] \e[32mApktool successfully installed..\e[0m";
	echo
elif [ -d "$PREFIX/opt/metasploit-framework" ]; then
	echo -e "\e[1;34m[*] \e[32mYou are using Unstable-repo...metasploit-framework..\e[0m";
	cp apktool/apktool.jar $PREFIX/bin/
        cp apktool/.apktool/aapt apktool/.apktool/zipalign apktool/.apktool/apktool $PREFIX/bin/
        chmod 700 $PREFIX/bin/apktool $PREFIX/bin/aapt $PREFIX/bin/zipalign
	rm $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb
	cp apk.rb $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb
        (patch -N $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb apktool/.apktool/apk.rb.patch) &> /dev/null
        cp apktool/.apktool/framework-res.apk $PREFIX/share/
	echo -e "\e[1;34m[*] \e[32mApktool successfully in    stalled..\e[0m";
	echo ""
else
	echo -e "\e[1;34m[*] \e[32mYou have to install metasploit-framework first...\e[0m";
	echo -e "\e[1;34m[*] \e[32mThen try again..\e[0m";
	exit
fi
rm -rf installjava
termux-wake-unlock;
fi
exit

