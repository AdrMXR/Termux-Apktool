--- apk.rb.old	2019-04-25 20:19:46.000000000 +0530
+++ apk.rb	2019-05-27 00:37:01.502999904 +0530
@@ -41,10 +41,7 @@
     application = amanifest.xpath('//application')
     application_name = application.attribute("name")
     if application_name
-      application_str = application_name.to_s
-      unless application_str == 'android.app.Application'
-        return application_str
-      end
+      return application_name.to_s
     end
     activities = amanifest.xpath("//activity|//activity-alias")
     for activity in activities
@@ -125,7 +122,7 @@
 
   def parse_orig_cert_data(orig_apkfile)
     orig_cert_data = Array[]
-    keytool_output = run_cmd(%Q{keytool -J-Duser.language=en -printcert -jarfile "#{orig_apkfile}"})
+    keytool_output = run_cmd("keytool -J-Duser.language=en -printcert -jarfile '#{orig_apkfile}'")
     owner_line = keytool_output.match(/^Owner:.+/)[0]
     orig_cert_dname = owner_line.gsub(/^.*:/, '').strip
     orig_cert_data.push("#{orig_cert_dname}")
@@ -224,7 +221,7 @@
     FileUtils.rm Dir.glob("#{tempdir}/payload/smali/com/metasploit/stage/R*.smali")
 
     package = amanifest.xpath("//manifest").first['package']
-    package = package.downcase + ".#{Rex::Text::rand_text_alpha_lower(5)}"
+    package = package + ".#{Rex::Text::rand_text_alpha_lower(5)}"
     classes = {}
     classes['Payload'] = Rex::Text::rand_text_alpha_lower(5).capitalize
     classes['MainService'] = Rex::Text::rand_text_alpha_lower(5).capitalize
@@ -264,9 +261,8 @@
     fix_manifest(tempdir, package, classes['MainService'], classes['MainBroadcastReceiver'])
 
     print_status "Rebuilding #{apkfile} with meterpreter injection as #{injected_apk}\n"
-    apktool_output = run_cmd("apktool b -o #{injected_apk} #{tempdir}/original")
+    run_cmd("apktool b --aapt $PREFIX/bin/aapt -o #{injected_apk} #{tempdir}/original")
     unless File.readable?(injected_apk)
-      print_error apktool_output
       raise RuntimeError, "Unable to rebuild apk with apktool"
     end
 
